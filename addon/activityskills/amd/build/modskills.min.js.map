{"version":3,"file":"modskills.min.js","sources":["../src/modskills.js"],"sourcesContent":["define(['jquery', 'core/modal_factory', 'core/str', 'core_form/modalform'], function($, ModalFactory, Str, ModalForm) {\r\n\r\n    const SELECTORS = {\r\n        table: '#mod_skills_list',\r\n        editskill: '[data-target=\"toolskill-edit\"]',\r\n        skillsRow: '#mod_skills_list .skill-actions a.action-edit'\r\n    };\r\n\r\n    /**\r\n     * Show the activity skill edit settings in the modal.\r\n     */\r\n    class ToolSkillsActivity {\r\n\r\n        /**\r\n         * Get the data and selectors.\r\n         *\r\n         * @param {*} skillID Skill ID\r\n         * @param {*} courseID Coursae ID\r\n         * @param {*} modID Module ID\r\n         */\r\n        constructor(skillID, courseID, modID) {\r\n\r\n            this.SELECTORS = SELECTORS;\r\n            this.skillCourseID = '';\r\n            this.skillID = skillID;\r\n            this.courseID = courseID;\r\n            this.modID = modID;\r\n\r\n            this.SELECTORS.root = '#mod_skills_list [data-skillid=\"' + this.skillID + '\"]';\r\n            this.addActionListiners();\r\n        }\r\n\r\n        getRoot() {\r\n            return document.querySelector(this.SELECTORS.root);\r\n        }\r\n\r\n        /**\r\n         * Show the course module form on the modal.\r\n         */\r\n        showContentForm() {\r\n\r\n            var formClass = 'skilladdon_activityskills\\\\form\\\\course_mod_form';\r\n\r\n            const modalForm = new ModalForm({\r\n\r\n                formClass: formClass,\r\n                // Add as many arguments as you need, they will be passed to the form:\r\n                args: {courseid: this.courseID, skill: this.skillID, modid: this.modID},\r\n                // Modal configurations, here set modal title.\r\n                modalConfig: {title: Str.get_string('moduleskills', 'skilladdon_activityskills')},\r\n            });\r\n\r\n            modalForm.show();\r\n\r\n            // Listen to events if you want to execute something on form submit.\r\n            modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, function() {\r\n                window.location.reload();\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Show the content form, when click the config.\r\n         */\r\n        addActionListiners() {\r\n\r\n            var self = this;\r\n\r\n            this.getRoot().addEventListener('click', function(e) {\r\n\r\n                if (e.target.closest(SELECTORS.editskill)) {\r\n                    e.preventDefault();\r\n                    self.showContentForm();\r\n                }\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Add event listenrs.\r\n         *\r\n         * @param {Integer} courseID\r\n         * @param {Integer} modID\r\n         */\r\n        static createInstances(courseID, modID) {\r\n\r\n            let skills = document.querySelectorAll(SELECTORS.skillsRow);\r\n\r\n            const skillsList = [];\r\n\r\n            if (skills !== null) {\r\n\r\n                var skill;\r\n                skills.forEach((skl) => {\r\n                    var skillID = skl.dataset.skillid;\r\n                    if (skillID in skillsList) {\r\n                        skill = skillsList[skillID];\r\n                    } else {\r\n                        skill = new ToolSkillsActivity(skillID, courseID, modID);\r\n                        skillsList[skillID] = skill;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    return {\r\n\r\n        init: function(courseID, modID) {\r\n            ToolSkillsActivity.createInstances(courseID, modID);\r\n        }\r\n    };\r\n});\r\n"],"names":["define","$","ModalFactory","Str","ModalForm","SELECTORS","table","editskill","skillsRow","ToolSkillsActivity","constructor","skillID","courseID","modID","skillCourseID","root","this","addActionListiners","getRoot","document","querySelector","showContentForm","modalForm","formClass","args","courseid","skill","modid","modalConfig","title","get_string","show","addEventListener","events","FORM_SUBMITTED","window","location","reload","self","e","target","closest","preventDefault","skills","querySelectorAll","skillsList","forEach","skl","dataset","skillid","init","createInstances"],"mappings":"AAAAA,6CAAO,CAAC,SAAU,qBAAsB,WAAY,wBAAwB,SAASC,EAAGC,aAAcC,IAAKC,iBAEjGC,UAAY,CACdC,MAAO,mBACPC,UAAW,iCACXC,UAAW,uDAMTC,mBASFC,YAAYC,QAASC,SAAUC,YAEtBR,UAAYA,eACZS,cAAgB,QAChBH,QAAUA,aACVC,SAAWA,cACXC,MAAQA,WAERR,UAAUU,KAAO,mCAAqCC,KAAKL,QAAU,UACrEM,qBAGTC,iBACWC,SAASC,cAAcJ,KAAKX,UAAUU,MAMjDM,wBAIUC,UAAY,IAAIlB,UAAU,CAE5BmB,UAJY,mDAMZC,KAAM,CAACC,SAAUT,KAAKJ,SAAUc,MAAOV,KAAKL,QAASgB,MAAOX,KAAKH,OAEjEe,YAAa,CAACC,MAAO1B,IAAI2B,WAAW,eAAgB,gCAGxDR,UAAUS,OAGVT,UAAUU,iBAAiBV,UAAUW,OAAOC,gBAAgB,WACxDC,OAAOC,SAASC,YAOxBpB,yBAEQqB,KAAOtB,UAENE,UAAUc,iBAAiB,SAAS,SAASO,GAE1CA,EAAEC,OAAOC,QAAQpC,UAAUE,aAC3BgC,EAAEG,iBACFJ,KAAKjB,6CAWMT,SAAUC,WAEzB8B,OAASxB,SAASyB,iBAAiBvC,UAAUG,iBAE3CqC,WAAa,OAIXnB,MAFO,OAAXiB,QAGAA,OAAOG,SAASC,UACRpC,QAAUoC,IAAIC,QAAQC,QACtBtC,WAAWkC,WACXnB,MAAQmB,WAAWlC,UAEnBe,MAAQ,IAAIjB,mBAAmBE,QAASC,SAAUC,OAClDgC,WAAWlC,SAAWe,iBAOnC,CAEHwB,KAAM,SAAStC,SAAUC,OACrBJ,mBAAmB0C,gBAAgBvC,SAAUC"}